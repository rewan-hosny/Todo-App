{"version":3,"sources":["todo.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAC3C,6CAA+D;AAG/D,6BAA8C;AAK9C;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD9B,YAAO,GAAG,6BAA6B,CAAC;IACN,CAAC;IAE3C,mCAAa,GAAb,UAAc,WAAkC;QAAlC,4BAAA,EAAA,kBAAkC;QAC9C,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACpD,IAAI,GAAG,GAAM,IAAI,CAAC,OAAO,iBAAc,CAAC;QAExC,qEAAqE;QACrE,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,GAAG,IAAI,kBAAgB,WAAa,CAAC;SACtC;QAED,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,iCAAW,GAAX,UAAY,QAAc;QACtB,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACpD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;gBAClC,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,OAAO,iBAAc,EAAE,QAAQ,EAAE,WAAW,CAAC;aAC3E,IAAI,CAAC,iBAAU,CAAC,UAAC,KAAU;YACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,OAAO,iBAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAGC,gCAAU,GAAV,UAAW,EAAU,EAAC,QAAkB;QAChC,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC1D,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;gBAClC,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAClB,IAAI,CAAC,OAAO,qBAAgB,EAAI,EAClC,QAAQ,EAAC,WAAW,CACrB,CAAC;IACJ,CAAC;IACC,gCAAU,GAAV,UAAW,EAAU;QACf,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC1D,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;gBAClC,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,QAAM,CAAA,CACnB,IAAI,CAAC,OAAO,qBAAgB,EAAI,EACnC,WAAW,CACX,CAAC;IACF,CAAC;IA/DQ,WAAW;QAHvB,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,WAAW,CAgEvB;IAAD,kBAAC;CAhED,AAgEC,IAAA;AAhEY,kCAAW","file":"todo.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Todo } from 'src/app/Todo';\nimport { catchError, throwError } from 'rxjs';\nimport { EditTodo } from 'src/app/EditTodo';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\nprivate baseUrl = 'https://localhost:7101/api/';\n  constructor(private http: HttpClient) { }\n  \ngetMyTodoList(isCompleted: boolean | null = null) {\n  const token = localStorage.getItem('Authorization');\n  let url = `${this.baseUrl}Todo/mytodos`;\n\n  // If isCompleted is provided, add it as a query parameter to the URL\n  if (isCompleted !== null) {\n    url += `?isCompleted=${isCompleted}`;\n  }\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    })\n  };\n   \n  return this.http.get(url, httpOptions);\n}\n\naddTodoItem(todoItem: Todo): Observable<any> {\n    const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<any>(`${this.baseUrl}Todo/mytodos`, todoItem, httpOptions)\n        .pipe(catchError((error: any) => {\n            console.log(error.errors);\n            return throwError(error);\n        }));\n}\n\n  \n  updateTodo(id: number,todoItem: EditTodo): Observable<EditTodo[]> {\n          const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.patch<EditTodo[]>(\n     `${this.baseUrl}Todo/mytodos/${id}`,\n      todoItem,httpOptions\n    );\n  }\n    DeleteTodo(id: number): Observable<any> {\n          const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete<any>(\n     `${this.baseUrl}Todo/mytodos/${id}`,\n     httpOptions\n    );\n    }\n}\n"]}