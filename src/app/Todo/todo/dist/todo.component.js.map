{"version":3,"sources":["todo.component.ts"],"names":[],"mappings":"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","file":"todo.component.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { EditTodo } from 'src/app/EditTodo';\nimport { TodoService } from 'src/app/Service/Todo/todo.service';\nimport { Todo } from '../../Todo';\nimport { NgModule } from '@angular/core';\n\n\n\n\n\n@Component({\n  selector: 'todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n  todoList: any[] = [];\n  newItem: any = {};\n  listTodo: EditTodo[] = [];\n  filteredListTodo: EditTodo[] = [];\n\n  isCompleted: boolean | null = null;\n  id: number = 0;\n  @Input() todo?: Todo;\n  @Output() TodoUpdate = new EventEmitter<Todo[]>();\n\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit(): void {\n    this.loadTodoList();\n  }\n\n  loadTodoList() {\n    this.todoService.getMyTodoList(this.isCompleted).subscribe(\n      (result: any) => {\n        this.listTodo = result;\n        this.filteredListTodo = this.listTodo.filter(todo => {\n          if (this.isCompleted === null) {\n            return true; // show all items if isCompleted is null\n          } else {\n            return todo.isComplete === this.isCompleted;\n          }\n        });\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n\n  toggleCompleted(isCompleted: boolean | null) {\n    this.isCompleted = isCompleted;\n    this.loadTodoList();\n  }\n\n\n  addTodoItem(): void {\n    this.todoService.addTodoItem(this.newItem).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.newItem = new Todo();\n        this.loadTodoList();\n      },\n      (error: any) => {\n        console.log(error);\n        console.log(error.error.errors); // add this line to log the specific error messages\n      }\n    );\n  }\n\n\n  updateTodoItem(todo: EditTodo): void {\n    this.todoService.updateTodo(todo.id, todo).subscribe(\n      () => {\n        console.log(`Todo item with ID ${todo.id} updated successfully.`);\n        this.loadTodoList();\n      },\n      (error: any) => {\n        console.log(`Error updating todo item with ID ${todo.id}: ${error}`);\n      }\n    );\n  }\n\n// deleteTodoItem(id: number): void {\n//   this.id = id;\n//   const modal = (<any>$('#ConfirmDeleteComponent'));\n//   modal.modal('show');\n// }\n\n  \n\n  // confirmDelete() {\n  //   this.todoService.DeleteTodo(this.id).subscribe(\n  //     () => {\n  //       console.log(`Todo item with ID ${this.id} deleted successfully.`);\n  //       this.loadTodoList();\n  //     },\n  //     (error: any) => {\n  //       console.log(`Error deleting todo item with ID ${this.id}: ${error}`);\n  //     }\n  //   );\n  // }\n  // openDeleteConfirmationModal(id: number) {\n  //   const modalRef = this.modalService.open(ConfirmDeleteComponent, { centered: true });\n  //   modalRef.componentInstance.delete.subscribe(() => {\n  //     this.todoService.DeleteTodo(id).subscribe(\n  //       () => {\n  //         console.log(`Todo item with ID ${id} deleted successfully.`);\n  //         this.loadTodoList();\n  //       },\n  //       (error: any) => {\n  //         console.log(`Error deleting todo item with ID ${id}: ${error}`);\n  //       }\n  //     );\n  //   });\n  // }\n\n\n\n  // deleteTodoItem(id: number): void {\n  //   if(confirm('Are you sure you want to delete this item?')) {\n  //     this.todoService.DeleteTodo(id).subscribe(\n  //       () => {\n  //         console.log(`Todo item with ID ${id} deleted successfully.`);\n  //         this.loadTodoList();\n  //       },\n  //       (error: any) => {\n  //         console.log(`Error deleting todo item with ID ${id}: ${error}`);\n  //       }\n  //     );\n  //   }\n  // }\n\n\n  createTodo() {\n    this.todoService.addTodoItem(this.newItem).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.newItem = new Todo();\n        this.loadTodoList();\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n\n\n  updateTodomode(item: EditTodo) {\n    item.editMode = !item.editMode;\n  }\n\n}\n\n\n\n\n"]}