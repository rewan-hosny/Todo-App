{"version":3,"sources":["todo.component.ts"],"names":["core_1","require","Todo_1","TodoComponent","todoService","this","todoList","newItem","listTodo","id","TodoUpdate","EventEmitter","prototype","ngOnInit","loadTodoList","_this","getMyTodoList","subscribe","result","error","console","log","addTodoItem","response","Todo","errors","updateTodoItem","todo","updateTodo","createTodo","updateTodomode","item","editMode","__decorate","Input","Output","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAGAC,OAAAD,QAAA,cAOAE,cAAA,WAQE,SAAAA,EAAoBC,GAAAC,KAAAD,YAAAA,EAPpBC,KAAAC,SAAkB,GAClBD,KAAAE,QAAe,GACfF,KAAAG,SAAuB,GACvBH,KAAAI,GAAW,EAEDJ,KAAAK,WAAa,IAAIV,OAAAW,aAgE7B,OA5DER,EAAAS,UAAAC,SAAA,WACER,KAAKS,gBAGRX,EAAAS,UAAAE,aAAA,WAAA,IAAAC,EAAAV,KACCA,KAAKD,YAAYY,gBAAgBC,UAC/B,SAACC,GACCH,EAAKP,SAAWU,GAElB,SAACC,GACCC,QAAQC,IAAIF,MAMhBhB,EAAAS,UAAAU,YAAA,WAAA,IAAAP,EAAAV,KACEA,KAAKD,YAAYkB,YAAYjB,KAAKE,SAASU,UACzC,SAACM,GACCH,QAAQC,IAAIE,GACZR,EAAKR,QAAU,IAAIL,OAAAsB,KACnBT,EAAKD,gBAEP,SAACK,GACCC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAMA,MAAMM,WAMhCtB,EAAAS,UAAAc,eAAA,SAAeC,GAAf,IAAAZ,EAAAV,KACEA,KAAKD,YAAYwB,WAAWD,EAAKlB,GAAIkB,GAAMV,UACzC,WACEG,QAAQC,IAAI,qBAAqBM,EAAKlB,GAAE,0BACxCM,EAAKD,gBAEP,SAACK,GACCC,QAAQC,IAAI,oCAAoCM,EAAKlB,GAAE,KAAKU,MAKhEhB,EAAAS,UAAAiB,WAAA,WAAA,IAAAd,EAAAV,KACEA,KAAKD,YAAYkB,YAAYjB,KAAKE,SAASU,UACzC,SAACM,GACCH,QAAQC,IAAIE,GACZR,EAAKR,QAAU,IAAIL,OAAAsB,KACnBT,EAAKD,gBAEP,SAACK,GACCC,QAAQC,IAAIF,MAMlBhB,EAAAS,UAAAkB,eAAA,SAAeC,GACbA,EAAKC,UAAYD,EAAKC,UA/DdC,WAAA,CAARjC,OAAAkC,6BACQD,WAAA,CAATjC,OAAAmC,oCANUhC,EAAa8B,WAAA,CALzBjC,OAAAoC,UAAU,CACTC,SAAU,OACVC,YAAa,wBACbC,UAAW,CAAC,2BAEDpC,GAAb,GAAaqC,QAAArC,cAAAA","file":"todo.component.min.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { EditTodo } from 'src/app/EditTodo';\nimport { TodoService } from 'src/app/Service/Todo/todo.service';\nimport {Todo} from '../../Todo'\n\n@Component({\n  selector: 'todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n  todoList: any[] = [];\n  newItem: any = {};\n  listTodo: EditTodo[] = [];\n  id: number=0;\n   @Input() todo?: Todo;\n  @Output() TodoUpdate = new EventEmitter<Todo[]>();\n\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit(): void {\n    this.loadTodoList();\n  }\n\n loadTodoList() {\n  this.todoService.getMyTodoList().subscribe(\n    (result: any) => {\n      this.listTodo = result;\n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n}\n\n \n  addTodoItem(): void {\n    this.todoService.addTodoItem(this.newItem).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.newItem = new Todo();\n        this.loadTodoList();\n      },\n      (error: any) => {\n        console.log(error);\n        console.log(error.error.errors); // add this line to log the specific error messages\n      }\n    );\n  }\n  \n\nupdateTodoItem(todo: EditTodo): void {\n  this.todoService.updateTodo(todo.id, todo).subscribe(\n    () => {\n      console.log(`Todo item with ID ${todo.id} updated successfully.`);\n      this.loadTodoList();\n    },\n    (error: any) => {\n      console.log(`Error updating todo item with ID ${todo.id}: ${error}`);\n    }\n  );\n}\n\n  createTodo() {\n    this.todoService.addTodoItem(this.newItem).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.newItem = new Todo();\n        this.loadTodoList();\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n\n\n  updateTodomode(item: EditTodo) {\n    item.editMode = !item.editMode;\n  }\n}\n\n\n  \n\n"]}